ðŸŸ¢Level 1: Basics (1â€“10)
1. List all products that cost more than 50.
SELECT ProductName, UnitPrice FROM northwind.products
WHERE UnitPrice > 50;

2. Show all customers whose company name starts with "B".
SELECT CompanyName FROM northwind.customers
WHERE CompanyName LIKE "B%";

3. Display the first 5 products sorted by unit price descending.
SELECT ProductName, UnitPrice FROM northwind.products
ORDER BY UnitPrice DESC
LIMIT 5;

4. Find all products with units in stock between 10 and 20.
SELECT ProductName, UnitsInStock FROM northwind.products
WHERE UnitsInStock BETWEEN 10 AND 20;

5. Show customers located in Mexico.
SELECT CompanyName, Country FROM northwind.customers
WHERE Country LIKE "Mexico";

6. Get all product names that contain the word "cheese".
SELECT ProductName FROM northwind.products
WHERE ProductName LIKE "% cheese";

7. Find all orders with OrderID greater than 10250.
SELECT OrderID FROM northwind.orders
WHERE OrderID > 10250;

8.List all products with exactly 0 units on order.
SELECT ProductName, UnitsOnOrder FROM northwind.products
WHERE UnitsOnOrder = 0;

9. Show the 3 most recent orders (based on OrderDate).
SELECT OrderID, OrderDate FROM northwind.orders
LIMIT 3;
--Already in ASC Order(DEFAULT).

10. Show all products where the product name ends in 's'.
SELECT ProductName FROM northwind.products
WHERE ProductName LIKE "%s";

ðŸŸ¡ Level 2: Filtering & Aggregation (11â€“20)
11. Count how many customers are in the database.
SELECT COUNT(CompanyName) AS NumberOfCustomers FROM northwind.customers;

12. Find the average unit price of all products.
SELECT AVG(UnitPrice) AS AverageUnitPrice FROM northwind.products;

13. Show the maximum quantity ever ordered (from Order Details).
SELECT MAX(Quantity) AS MaxQuantityOrdered FROM northwind.`order details`;

14. Find all products where UnitPrice is less than the average UnitPrice.
SELECT ProductName, UnitPrice FROM northwind.products
WHERE UnitPrice < (SELECT AVG(UnitPrice) FROM northwind.products);

15. List product IDs that appear more than 3 times in Order Details.
SELECT ProductID, COUNT(ProductID) AS TimesInOrderDetails FROM northwind.`order details`
GROUP BY ProductID
HAVING TimesInOrderDetails > 3;

16. Show products that have been ordered at least once.
SELECT ProductName, ProductID FROM northwind.products
WHERE ProductID IN (SELECT ProductID FROM northwind.`order details`);

17. Show the product with the minimum units in stock.
SELECT ProductName, UnitsInStock FROM northwind.products
WHERE UnitsInStock = (SELECT MIN(UnitsInStock) FROM northwind.products);

18. Find all product names with UnitPrice equal to the highest price.
SELECT ProductName, UnitPrice FROM northwind.products
WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM northwind.products);

19. Find all customers whose CustomerID contains the letter "A".
SELECT CompanyName, CustomerID FROM northwind.customers
WHERE CustomerID LIKE "%A%";

20. List all unique cities from the Customers table.
SELECT DISTINCT City FROM northwind.customers;

ðŸŸ  Level 3: GROUP BY (21â€“30)
21. Count how many products each supplier supplies.
SELECT SupplierID, COUNT(ProductID) AS NumberofProductsSupplied FROM northwind.products
GROUP BY SupplierID;

22. Show the total quantity ordered per product.
SELECT ProductID, COUNT(Quantity) AS TotalQuantityPerProduct FROM northwind.`order details`
GROUP BY ProductID;

23. Find the number of orders per customer.
SELECT CustomerID, COUNT(OrderID) AS NumberOfOrdersPerCustomer FROM northwind.orders
GROUP BY CustomerID;

24. List categories with more than 5 products.
SELECT CategoryID, COUNT(ProductID) AS NumberOfProductsForCategory FROM northwind.products
GROUP BY CategoryID
HAVING NumberOfProductsForCategory > 5;

25. Show the average unit price per category.
SELECT CategoryID, AVG(UnitPrice) AS AvgUnitPricePerCategory FROM northwind.products
GROUP BY CategoryID;

26. Count how many orders there are per year.
SELECT COUNT(OrderDate) AS OrdersFrom1996 FROM northwind.orders
WHERE OrderDate LIKE "1996%";

SELECT COUNT(OrderDate) AS OrdersFrom1997 FROM northwind.orders
WHERE OrderDate LIKE "1997%";

SELECT COUNT(OrderDate) AS OrdersFrom1998 FROM northwind.orders
WHERE OrderDate LIKE "1998%";

27. List the total quantity per OrderID where the quantity > 30.
28. List suppliers where the average product price is under 20.
29. Show the total number of units in stock per category.
30. Show how many products each product name appears with (hint: GROUP BY ProductName).

ðŸ”µ Level 4: HAVING (31â€“37)
31. Find products that have been ordered more than 200 units in total.
32. Find customers who placed more than 5 orders.
33. Find categories where the average price is greater than 40.
34. Find suppliers who supply fewer than 3 products.
35. List orders with more than 5 items in them.
36. Show all products that have an average quantity per order > 30.
37. Find customers whose average order quantity is under 20.

ðŸŸ£ Level 5: Single-Level Subqueries (38â€“44)
38. Show the name of the most expensive product.
39. Find all products with a unit price equal to the average.
40. Show customers who placed the most recent order.
41. List all products that have never been ordered.
42. Show products that cost more than any product in category 2.
43. Show orders that were placed after the most recent order from CustomerID "ALFKI".
44. Show all products with units in stock equal to the minimum.

ðŸ”´ Level 6: Nested Subqueries (45â€“50)
45. Find product names ordered in the order with the highest total quantity.
46. Find customers who have only placed one order.
47. Find the average unit price of products ordered by customers from Brazil.
48. Find the name of the customer who ordered the most quantity.
49. Show the product name of the most frequently ordered product.
50. Show the customer with the highest average quantity per product ordered.